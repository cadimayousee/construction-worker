"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createAppleWriter = exports.createAppleReader = exports.validateConfig = void 0;
const tslib_1 = require("tslib");
const ajv_1 = tslib_1.__importDefault(require("ajv"));
const assert_1 = tslib_1.__importDefault(require("assert"));
const reader_1 = require("./apple/config/reader");
const writer_1 = require("./apple/config/writer");
/**
 * Run the JSON Schema validation to normalize defaults and flag early config errors.
 * This includes validating the known store limitations for every configurable property.
 */
function validateConfig(config) {
    const validator = new ajv_1.default({ allErrors: true, useDefaults: true })
        .addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'))
        .compile(require('../../schema/metadata-0.json'));
    const valid = validator(config);
    return { valid, errors: validator.errors || [] };
}
exports.validateConfig = validateConfig;
/** Create a versioned deserializer to fetch App Store data from the store configuration. */
function createAppleReader(config) {
    (0, assert_1.default)(config.configVersion === 0, 'Unsupported store configuration version');
    (0, assert_1.default)(config.apple, 'No apple configuration found');
    return new reader_1.AppleConfigReader(config.apple);
}
exports.createAppleReader = createAppleReader;
/** Create the serializer to write the App Store to the store configuration. */
function createAppleWriter() {
    return new writer_1.AppleConfigWriter();
}
exports.createAppleWriter = createAppleWriter;
